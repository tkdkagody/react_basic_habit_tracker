{"version":3,"sources":["components/habit.jsx","components/habitAddForm.jsx","components/habits.jsx","components/navbar.jsx","app.js","components/simpleHabit.jsx","index.js"],"names":["Habit","handleIncrement","props","onIncrement","habit","handleDerement","onDecrement","handleDelete","onDelete","console","log","this","name","count","className","onClick","PureComponent","HabitAddForm","memo","inputRef","React","createRef","formRef","ref","onSubmit","event","preventDefault","current","value","onAdd","reset","type","placeholder","Habits","handleDecrement","handleAdd","habits","map","id","onReset","Component","Navbar","totalCount","SimpleHabit","useState","setCount","spanRef","useRef","useCallback","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAsDeA,E,4MAvCXC,gBAAkB,WACd,EAAKC,MAAMC,YAAY,EAAKD,MAAME,Q,EAGtCC,eAAiB,WACb,EAAKH,MAAMI,YAAY,EAAKJ,MAAME,Q,EAGtCG,aAAe,WACX,EAAKL,MAAMM,SAAS,EAAKN,MAAME,Q,uDAnBnC,WACIK,QAAQC,IAAR,kBAAuBC,KAAKT,MAAME,MAAMQ,KAAxC,e,kCAGJ,WACIH,QAAQC,IAAR,kBAAwBC,KAAKT,MAAME,MAAMQ,KAAzC,qB,oBAiBJ,WACIH,QAAQC,IAAI,SADP,MAEiBC,KAAKT,MAAME,MAA1BS,EAFF,EAEEA,MAAOD,EAFT,EAESA,KACd,OACI,qBAAIE,UAAU,QAAd,UACD,sBAAMA,UAAU,aAAhB,SAA8BF,IAC9B,sBAAME,UAAU,cAAhB,SAA+BD,IAC/B,wBAAQC,UAAU,8BAClBC,QAASJ,KAAKV,gBADd,SAGA,mBAAGa,UAAU,yBAEb,wBAAQA,UAAU,8BAClBC,QAASJ,KAAKN,eADd,SAGA,mBAAGS,UAAU,0BAEb,wBAAQA,UAAU,4BAClBC,QAASJ,KAAKJ,aADd,SAGA,mBAAGO,UAAU,0B,GA5CJE,iBCgCLC,EAhCMC,gBAAK,SAAAhB,GACtB,IAAMiB,EAAWC,IAAMC,YACjBC,EAAUF,IAAMC,YAatB,OACI,uBACIE,IAAKD,EACLR,UAAU,WACVU,SAbS,SAAAC,GACbA,EAAMC,iBACN,IAAMd,EAAOO,EAASQ,QAAQC,MAC9BhB,GAAQV,EAAM2B,MAAMjB,GAEpBU,EAAQK,QAAQG,SAKhB,UAII,uBACIP,IAAKJ,EACLY,KAAK,OACLjB,UAAU,YACVkB,YAAY,UAEhB,wBAAQlB,UAAU,aAAlB,uBCsBGmB,E,4MA5CXhC,gBAAkB,SAAAG,GAChB,EAAKF,MAAMC,YAAYC,I,EAGzB8B,gBAAkB,SAAA9B,GACd,EAAKF,MAAMI,YAAYF,I,EAG3BG,aAAe,SAAAH,GACX,EAAKF,MAAMM,SAASJ,I,EAExB+B,UAAa,SAAAvB,GACT,EAAKV,MAAM2B,MAAMjB,I,4CAIrB,WAAU,IAAD,OAEL,OADAH,QAAQC,IAAI,UAER,sBAAKI,UAAU,SAAf,UACA,cAAC,EAAD,CAAce,MAAOlB,KAAKwB,YAC1B,6BAEIxB,KAAKT,MAAMkC,OAAOC,KAAI,SAAAjC,GAAK,OACxB,cAAC,EAAD,CAEAA,MAAOA,EACPD,YAAc,EAAKF,gBACnBK,YAAa,EAAK4B,gBAClB1B,SAAU,EAAKD,cAJTH,EAAMkC,SASnB,wBAAQxB,UAAU,eAClBC,QAASJ,KAAKT,MAAMqC,QADpB,0B,GApCSC,aCcNC,E,4JAhBX,WAEI,OADAhC,QAAQC,IAAI,UAIJ,sBAAKI,UAAU,SAAf,UACI,mBAAGA,UAAU,4BACb,iDACA,sBAAMA,UAAU,eAAhB,SAAgCH,KAAKT,MAAMwC,oB,GAT1C1B,iB,GCIHwB,Y,aCoBHG,EAxBK,SAAAzC,GAAU,IAAD,EACC0C,mBAAS,GADV,mBAClB/B,EADkB,KACXgC,EADW,KAEnBC,EAAUC,mBAEV9C,EAAkB+C,uBAAY,WAEhCH,EAAShC,EAAQ,MAIrB,OACI,qBAAIC,UAAU,QAAd,UACE,sBAAMS,IAAKuB,EAAShC,UAAU,aAA9B,qBACA,sBAAMA,UAAU,cAAhB,SAA+BD,IAC/B,wBACEC,UAAU,8BACVC,QAASd,EAFX,SAIE,mBAAGa,UAAU,6BCZzBmC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9a953e5f.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\n\n\nclass Habit extends PureComponent {\n    //컴포넌트가 ui상에 등록되었을때 => 사용자에게 보여질때 호출\n    componentDidMount(){\n        console.log(`habit : ${this.props.habit.name} mounted`)\n    }\n      //컴포넌트가 지워질때 호출 \n    componentWillUnmount(){\n        console.log( `habit : ${this.props.habit.name} wil unmounted`)\n    }\n\n\n\n    handleIncrement = () => {\n        this.props.onIncrement(this.props.habit);\n    }\n\n    handleDerement = () => {\n        this.props.onDecrement(this.props.habit);\n    }\n\n    handleDelete = () => {\n        this.props.onDelete(this.props.habit);\n    }\n\n    render() {\n        console.log('habit')\n        const {count, name} = this.props.habit ;\n        return (\n            <li className=\"habit\">\n           <span className=\"habit-name\">{name}</span>\n           <span className=\"habit-count\">{count}</span>\n           <button className=\"habit-button habit-increase\"\n           onClick={this.handleIncrement}\n           >\n           <i className=\"fas fa-plus-square\"></i>\n           </button>\n           <button className=\"habit-button habit-decrease\"\n           onClick={this.handleDerement}\n           >\n           <i className=\"fas fa-minus-square\"></i>\n           </button>\n           <button className=\"habit-button habit-delete\"\n           onClick={this.handleDelete}\n           >\n           <i className=\"fas fa-trash\"></i>\n           </button>\n            </li>\n        );\n    }\n}\n\nexport default Habit;\n","import React, { memo } from 'react';\n\n\nconst HabitAddForm = memo(props => {\n    const inputRef = React.createRef();\n    const formRef = React.createRef();\n\n\n\n    const onSubmit = event => {\n        event.preventDefault();\n        const name = inputRef.current.value;\n        name && props.onAdd(name);\n        //inputRef.current.value = \"\"\n        formRef.current.reset();\n    }\n\n\n    return (\n        <form \n            ref={formRef}\n            className=\"add-form\" \n            onSubmit={onSubmit}>\n            <input \n                ref={inputRef}\n                type=\"text\" \n                className=\"add-input\" \n                placeholder=\"Habit\"\n            />\n            <button className=\"add-button\">Add</button>\n        </form>\n    );\n});\n\n\nexport default HabitAddForm;","\nimport React, { Component } from 'react';\nimport Habit from './habit'\nimport HabitAddForm from './habitAddForm';\n\nclass Habits extends Component {\n\n    handleIncrement = habit => {\n      this.props.onIncrement(habit)\n    };\n\n    handleDecrement = habit => {\n        this.props.onDecrement(habit)\n    }\n\n    handleDelete = habit => { \n        this.props.onDelete(habit)\n    }\n    handleAdd =  name  => {\n        this.props.onAdd(name);\n    }\n\n\n    render() {\n        console.log('habits');\n        return (\n            <div className=\"habits\">\n            <HabitAddForm onAdd={this.handleAdd}></HabitAddForm>\n            <ul>\n           \n               {this.props.habits.map(habit => (\n                   <Habit \n                   key ={habit.id} \n                   habit={habit} \n                   onIncrement= {this.handleIncrement}\n                   onDecrement={this.handleDecrement}\n                   onDelete={this.handleDelete}\n                   />\n               ))}\n            \n            </ul>\n            <button className=\"habits-reset\"\n            onClick={this.props.onReset}\n            >\n            Reset\n            </button>\n            </div>\n        );\n    }\n}\n\nexport default Habits;\n\n","import React, { PureComponent } from 'react';\n\nclass Navbar extends PureComponent {\n    render() {\n        console.log('navbar')\n        return (\n          \n            \n                <div className=\"navbar\">\n                    <i className=\"navbar-logo fas fa-leaf\"></i>\n                    <span>Habit Tracker</span>\n                    <span className=\"navbar-count\">{this.props.totalCount}</span>\n                </div>\n       \n           \n        );\n    }\n}\n\nexport default Navbar;","import React, { Component } from 'react';\nimport './app.css';\n\nimport Habits from './components/habits';\nimport Navbar from './components/navbar'\n\nclass App extends Component {\n\n  state = {\n    \n    habits : [\n        { id: 1, name : 'Reading', count : 0 },\n        { id: 2, name : 'Running', count : 0 },\n        { id: 3, name : 'Coding', count : 0 }\n    ]\n\n  };\n\n  //함수 모음\n  handleIncrement = habit => {\n    // const habits = [...this.state.habits]; \n    // const index = habits.indexOf(habit);\n    // habits[index].count++;\n\n\n    const habits = this.state.habits.map(item=>{\n      if(item.id === habit.id){\n        return {...habit, count: habit.count +1}\n      } \n      return item ; \n    })\n    this.setState({ habits });\n  };\n\n  handleDecrement = habit => {\n      // const habits = [...this.state.habits]; \n      // const index = habits.indexOf(habit);\n      // const count = habits[index].count -1 ;\n      // habits[index].count = count < 0 ? 0 : count ;\n\n      const habits = this.state.habits.map(item => {\n        if(item.id === habit.id){\n          const count = habit.count -1;\n          return {...habit, count: count <0 ? 0 : count}\n        }\n        return item;\n      })\n      this.setState({ habits : habits})\n  }\n\n  handleDelete = habit => {\n      const habits = this.state.habits.filter((el)=>{\n          return el.id !== habit.id;\n      })\n      this.setState({habits : habits})\n\n  }\n\n  handleAdd = name => {\n    const habits = [...this.state.habits, {id:Date.now(), name: name, count: 0}]; \n    this.setState({habits})\n  }\n  \n  handleReset = () => {\n    const habits = this.state.habits.map( habit => {\n      if(habit.count !==0) {\n        return {...habit, count: 0 }\n      }\n      return habit; \n    })\n    this.setState({habits})\n    \n  }\n\n\n  render() {\n    console.log('app')\n    return (\n      <>\n    <Navbar \n    totalCount={this.state.habits.filter(el => el.count > 0).length }\n    />\n     <Habits \n     habits={this.state.habits}\n     onIncrement= {this.handleIncrement}\n     onDecrement={this.handleDecrement}\n     onDelete={this.handleDelete}\n     onAdd={this.handleAdd}\n     onReset={this.handleReset}\n     />\n    </>\n    );\n  }\n\n\n}\n\nexport default App;","import React, { Component, useCallback, useRef, useState } from 'react';\n\nconst SimpleHabit = props => {\n    const [count, setCount] = useState(0); \n    const spanRef = useRef(); //한번만들어 메모리에 저장해두고 그것을 다시 사용한다.  simplehabit호출시마다 재호출되는것을 막아야함 \n\n    const handleIncrement = useCallback(() => {\n\n        setCount(count + 1);\n\n      });\n\n    return (\n        <li className=\"habit\">\n          <span ref={spanRef} className=\"habit-name\">Reading</span>\n          <span className=\"habit-count\">{count}</span>\n          <button\n            className=\"habit-button habit-increase\"\n            onClick={handleIncrement}\n          >\n            <i className=\"fas fa-plus-square\"></i>\n          </button>\n        </li>\n      );\n};\n\nexport default SimpleHabit;\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport '@fortawesome/fontawesome-free/js/all.js';\nimport SimpleHabit from './components/simpleHabit';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <SimpleHabit />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}